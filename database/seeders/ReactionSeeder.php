<?php

namespace Database\Seeders;

use App\Models\Reaction;
use Illuminate\Database\Seeder;
use Illuminate\Support\Str;
use Spatie\Emoji\Emoji;

class ReactionSeeder extends Seeder
{
    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $reactions = Emoji::all();

        $not_supported = [
            'CHARACTER_MELTING_FACE',
            'CHARACTER_FACE_WITH_OPEN_EYES_AND_HAND_OVER_MOUTH',
            'CHARACTER_FACE_WITH_PEEKING_EYE',
            'CHARACTER_SALUTING_FACE',
            'CHARACTER_DOTTED_LINE_FACE',
            'CHARACTER_FACE_WITH_DIAGONAL_MOUTH',
            'CHARACTER_FACE_HOLDING_BACK_TEARS',
            'CHARACTER_RIGHTWARDS_HAND',
            'CHARACTER_RIGHTWARDS_HAND_LIGHT_SKIN_TONE',
            'CHARACTER_RIGHTWARDS_HAND_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_RIGHTWARDS_HAND_MEDIUM_SKIN_TONE',
            'CHARACTER_RIGHTWARDS_HAND_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_RIGHTWARDS_HAND_DARK_SKIN_TONE',
            'CHARACTER_LEFTWARDS_HAND',
            'CHARACTER_LEFTWARDS_HAND_LIGHT_SKIN_TONE',
            'CHARACTER_LEFTWARDS_HAND_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_LEFTWARDS_HAND_MEDIUM_SKIN_TONE',
            'CHARACTER_LEFTWARDS_HAND_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_LEFTWARDS_HAND_DARK_SKIN_TONE',
            'CHARACTER_PALM_DOWN_HAND',
            'CHARACTER_PALM_DOWN_HAND_LIGHT_SKIN_TONE',
            'CHARACTER_PALM_DOWN_HAND_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_PALM_DOWN_HAND_MEDIUM_SKIN_TONE',
            'CHARACTER_PALM_DOWN_HAND_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PALM_DOWN_HAND_DARK_SKIN_TONE',
            'CHARACTER_PALM_UP_HAND',
            'CHARACTER_PALM_UP_HAND_LIGHT_SKIN_TONE',
            'CHARACTER_PALM_UP_HAND_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_PALM_UP_HAND_MEDIUM_SKIN_TONE',
            'CHARACTER_PALM_UP_HAND_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PALM_UP_HAND_DARK_SKIN_TONE',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED_LIGHT_SKIN_TONE',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED_MEDIUM_SKIN_TONE',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_HAND_WITH_INDEX_FINGER_AND_THUMB_CROSSED_DARK_SKIN_TONE',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER_LIGHT_SKIN_TONE',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER_MEDIUM_SKIN_TONE',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_INDEX_POINTING_AT_THE_VIEWER_DARK_SKIN_TONE',
            'CHARACTER_HEART_HANDS',
            'CHARACTER_HEART_HANDS_LIGHT_SKIN_TONE',
            'CHARACTER_HEART_HANDS_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HEART_HANDS_MEDIUM_SKIN_TONE',
            'CHARACTER_HEART_HANDS_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_HEART_HANDS_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_LIGHT_SKIN_TONE_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_LIGHT_SKIN_TONE_MEDIUM_SKIN_TONE',
            'CHARACTER_HANDSHAKE_LIGHT_SKIN_TONE_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_LIGHT_SKIN_TONE_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_LIGHT_SKIN_TONE_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_LIGHT_SKIN_TONE_MEDIUM_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_LIGHT_SKIN_TONE_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_LIGHT_SKIN_TONE_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_SKIN_TONE_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_SKIN_TONE_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_SKIN_TONE_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_SKIN_TONE_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_DARK_SKIN_TONE_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_DARK_SKIN_TONE_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_DARK_SKIN_TONE_MEDIUM_SKIN_TONE',
            'CHARACTER_HANDSHAKE_MEDIUM_DARK_SKIN_TONE_DARK_SKIN_TONE',
            'CHARACTER_HANDSHAKE_DARK_SKIN_TONE_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_DARK_SKIN_TONE_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_HANDSHAKE_DARK_SKIN_TONE_MEDIUM_SKIN_TONE',
            'CHARACTER_HANDSHAKE_DARK_SKIN_TONE_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PERSON_WITH_CROWN',
            'CHARACTER_PERSON_WITH_CROWN_LIGHT_SKIN_TONE',
            'CHARACTER_PERSON_WITH_CROWN_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_PERSON_WITH_CROWN_MEDIUM_SKIN_TONE',
            'CHARACTER_PERSON_WITH_CROWN_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PERSON_WITH_CROWN_DARK_SKIN_TONE',
            'CHARACTER_PREGNANT_MAN',
            'CHARACTER_PREGNANT_MAN_LIGHT_SKIN_TONE',
            'CHARACTER_PREGNANT_MAN_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_PREGNANT_MAN_MEDIUM_SKIN_TONE',
            'CHARACTER_PREGNANT_MAN_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PREGNANT_MAN_DARK_SKIN_TONE',
            'CHARACTER_PREGNANT_PERSON',
            'CHARACTER_PREGNANT_PERSON_LIGHT_SKIN_TONE',
            'CHARACTER_PREGNANT_PERSON_MEDIUM_LIGHT_SKIN_TONE',
            'CHARACTER_PREGNANT_PERSON_MEDIUM_SKIN_TONE',
            'CHARACTER_PREGNANT_PERSON_MEDIUM_DARK_SKIN_TONE',
            'CHARACTER_PREGNANT_PERSON_DARK_SKIN_TONE',
            'CHARACTER_WHEEL',
            'CHARACTER_MIRROR_BALL',
            'CHARACTER_BUBBLES',
            'CHARACTER_TROLL',
            'CHARACTER_CORAL',
            'CHARACTER_LOTUS',
            'CHARACTER_EMPTY_NEST',
            'CHARACTER_NEST_WITH_EGGS',
            'CHARACTER_BEANS',
            'CHARACTER_POURING_LIQUID',
            'CHARACTER_JAR',
            'CHARACTER_PLAYGROUND_SLIDE',
            'CHARACTER_HAMSA',
            'CHARACTER_LOW_BATTERY',
            'CHARACTER_CRUTCH',
            'CHARACTER_X_RAY',
            'CHARACTER_IDENTIFICATION_CARD',
            'CHARACTER_HEAVY_EQUALS_SIGN',

        ];

        if (Reaction::all()->count() == count($reactions)) {
            return;
        }

        foreach ($reactions as $key => $value) {
            $react = Reaction::firstOrNew([
                'reaction' => Str::studly(strtolower(str_replace('CHARACTER_', '', $key))),
            ]);
            $react->icon = $key;
            if (in_array($key, $not_supported)) {
                $react->supported = false;
            }
            $react->save();
        }
    }
}
